.org 0x801DAFA0
.set noreorder
##.set noat

#include <mips.h>

RETURN_ADDR = 0x8009A77C
GLOBAL_CONTEXT = 0x801C8A40 ## Tunic hack, needs to be updated if mapped space changes
ENTRANCE_TABLE_ADDR = 0x800F9C90 ## Need this for door of time fix
SAVE_ADDR = 0x8011A5D0
NAME_ADDR = SAVE_ADDR + 0x24
SEED_ADDR = 0x80105440

## N Space Variables
NO_RAND = 0x801C6E60 + 0x15D4 ##1C8434
PREV_ENTS = NO_RAND + 4 ## 0x00 = Input Entrance, 0x02 = Randomized Entrance
FAIRY_CUSTOM_ENT = PREV_ENTS + 12
VAR_SPACE = FAIRY_CUSTOM_ENT + 4
## remember to change mapped space!

MAX_ENTRANCES = 326		## number of acceptable entrance indexes
RAND_ENTRANCES = 318	## total number of entrances to randomize, not factoring the new grotto exits
SHUFFLE_ENTRANCES = 282 ## number of entrances to shuffle
GROTTOS_INDEX = 269		## index to the array of grotto entry points

NEW_GROTTO_ENTRANCES=14	## number of grotto entrances added in
TOTAL_GROTTO_ENTRANCES = 15 + NEW_GROTTO_ENTRANCES ## All Grotto Entrances

SPOOL_ENTRANCES = RAND_ENTRANCES - SHUFFLE_ENTRANCES + NEW_GROTTO_ENTRANCES
##						## number of specially randomized entrances

SPOOL_ADDR = (SHUFFLE_ENTRANCES*2)+VAR_SPACE
##						## address where specially randomized entrances are stored
GROTTO_SPACE = (GROTTOS_INDEX*2)+VAR_SPACE
##						## address where all randomized grotto entrances are stored

GENERIC_GROTTO = 0x003F
FAIRY_GROTTO = 0x036D
GROTTO_VAR_ADDR = 0x8011B967

## 9 "Standard Grotto" entrances
## 5 "fairy fountain" entrances
## 14 total

MAGIC_FAIRY_ENT = 0x0315
MAGIC_FAIRY_EX  = 0x045B

SACRED_CHEST = 0x8011AE68
SACRED_ENT   = 0x00A0

SPIRIT_BOSS_ENT = 0x008D

TUNIC_HACK_ADDR = 0x800F7AD8
TUNIC_SAVE_ADDR = SAVE_ADDR+0xD4+0x10 ## 0x18 constant to hit the other sets

ENDGAME_ENT = 0x400
ENDGAME_CS = -16  ## 0xFFF0

## Save Context variables
SC_CS = 0x0A
SC_HP = 0x30
SC_MAXHP = 0x2E

SC_ZONE_TYPE = 0x1364

.text
MAIN:
	addiu	$sp, $sp, -8
	la		t8, NODE_2
	lw		t0, NO_RAND
	beq		t0, $zero, END
	nop
	
	## Pre-Shuffle	
	jal SeedRNG		## returns old seed in v0
	nop
	##sw		v0, 12($sp)	## save old seed
	
	##jump to the thick of things: Pick one edge at random
	
	jal RandomRange
	lw		a1, VAR_Edges
	
	## v0 = edge id to use
	
	la		t1, VAR_Buckets	## t1 = pointer to current bucket
	li		t2, 0			## t2 = edge sum check 
	
GetEdge_GetBucket:	
	lh 		t3, 0x02(t1)		## Bucket->EdgeCount
	addu	t2, t3, t2
	slt		$at, v0, t1			## is randomized edge < cur edge sum?
	bnez	$at, GetEdge_FoundBucket
	nop
	beq		$zero, $zero, GetEdge_GetBucket
	addiu	t1, 8				## Go to the next bucket
	
GetEdge_FoundBucket:
	##t1 = bucket containing our edge reference
	##t3 = 
	
	
	

END:
	addiu $sp, $sp, 8
	j HookBack
	nop


Multiply:
## In: a0 = multiplier
##	   a1 = multiplicand
## Out:v0 = result
	move	v0,$zero      ## result
mult_loop:
    andi 	v0,a1,1
    beq 	v0,$zero,bit_clear
    addu 	v0,v0,a0  ## if (multiplicand & 1) result += multiplier << shift
bit_clear:
    sll 	a0,a0,1     ## multiplier <<= 1
    srl 	a1,a1,1     ## multiplicand >>= 1
    bne 	a1,$zero,mult_loop
	jr 		$ra


SeedRNG:
## V0 = old seed stored in number generator
#{
	addiu	$sp, $sp, -16
	sw		$ra, 0($sp)
	sw		s0, 4($sp)
	sw		s1, 8($sp)
						## 12 = old seed
	
	li		s0, NAME_ADDR
	li		s1, SEED_ADDR
	lw		t3, 0(s1)		#grab seed
	lw		t9, 0(s0)		#load first half of name
	sw		t3, 12($sp)		#save t3
	
	lw		t1, VAR_RNG_ONLY
	bne		t9, t1, SeedRNG_CONT
	nop
	lw		t2, VAR_RNG_ONLY+4
	lw		t8, 4(s0)
	beq	t2, t8, SeedRNG_END
	
	
SeedRNG_CONT:	
	
	## grab first 23 bits
	
	srl		t5, t9, 9
	
	jal		0x000CDC90		#generate random number, store in #V0
	sw		t5, 0(s1)		#store 23 bits of name as seed
	
	## grab next 23 bits
	
	lw		t9, 0(s0)		##first half of name
	sll		t5, t9, 14
	lw		t4, 4(s0)		##second half of name
	srl		t3, t4, 18
	
	or		t9, t5, t3
	addu	v0, t9
	
	jal		0x000CDC90		##generate random number, store in #V0
	sw		v0, 0(s1)		##mash potatoes
	
	lw		t4, 4(s0)		##load second half of word
	addu	t4, v0			##add to seed
	sw		t4, 0(s1)		##save new seed
	
SeedRNG_END:
	lw		$ra, 0($sp)
	lw		s0, 4($sp)
	lw		s1, 8($sp)
	lw		v0, 12($sp)
	jr		$ra
	addiu	$sp, $sp, 16
#}
	
RestoreRNG:
## A0 = seed to set
#{
	lui		t5, 0x8010 		##0x80105440, #SEED_ADDR
	jr		$ra
	sw		a0, 0x5440(t5)
#}	
	
RandomRange:
## A0	= Offset (unused)
## A1 = Range
## V0 = Result
## HACK! TunicHack_Random expects T0 to return a randomized word
#{
	addiu	$sp, $sp, -20
	sw		$ra, 16($sp)
	sw		$zero, 12($sp) ## was A0
	sw		a1, 8($sp)
	jal		0x000CDCCC ## F0 = random number
	nop
	lw		t6, 8($sp)
	lh		t1, 14($sp)
	lw		$ra, 16($sp)
	
	
	MTC1		t6, $f4 		## F4 stores T6 binary value
	nop
	CVT.S.W 	$f6, $f4 		## convert to single from word
	MUL.S		$f8, $f0, $f6 	## multiply range by 0-1
	TRUNC.W.S 	$f10, $f8 		## Truncate to word from single
	MFC1		t0, $f10
	nop			
	addu		v0, t0, t1
	sll			v0, v0, 0x10
	sra			v0, v0, 0x10
	jr			$ra
	addiu		$sp, $sp, 20
#}	

HookBack: 
## Returns control back to the game
## Stack must be back at top level or else i'll punch you	
#{
	li		t2, RETURN_ADDR
	
	##addiu $sp, $sp, 0xFF70
	##sw	s2, 0x0028($sp)
	lui		s2, 0x8012
	##sw	s1, 0x0024($sp)
	##or	s1, a0, $zero	//global context
	addiu	s2, s2, 0xA5D0
	##sw	$ra, 0x002C($sp)
	sw		s0, 0x0020($sp)
	lw		t6, 0x0000(s2)
	addiu	$at, $zero, 0xFFFF
	jr		t2
	lw		s0, 0x000(s1)
#}	



.data
VAR_RNG_ONLY: .word 0xBCB8B1E4, 0xB9D2D0DD
VAR_Entrances: .word 0x000003B0,\
0x0209065C,\
0x000403C0,\
0x024205F4,\
0x00080080,\
0x03A806C8,\
0x00100030,\
0x021D05C4,\
0x00280000,\
0x0221055C,\
0x002D02D0,\
0x050B0624,\
0x003304E4,\
0x00B1067C,\
0x00370040,\
0x02050624,\
0x003B02E0,\
0x046306A0,\
0x00430230,\
0x03CC05C4,\
0x004B02C0,\
0x035D0624,\
0x004F0360,\
0x03780598,\
0x00530300,\
0x04720480,\
0x006300C0,\
0x01D5067C,\
0x006705AC,\
0x043B0150,\
0x00720390,\
0x034D06A0,\
0x007A04A0,\
0x023D050C,\
0x007E0380,\
0x026E04E4,\
0x008204D0,\
0x01E105DC,\
0x00880060,\
0x03D4055C,\
0x00980050,\
0x02A606A0,\
0x009C0110,\
0x033C065C,\
0x00AD05AC,\
0x0262067C,\
0x00B70160,\
0x020106A0,\
0x00C10180,\
0x0266065C,\
0x00C503C0,\
0x040B00E0,\
0x00C90100,\
0x026A065C,\
0x00DB06A0,\
0x017D0640,\
0x00E40624,\
0x019506A0,\
0x00EA0534,\
0x01810640,\
0x00FC04B0,\
0x01A9060C,\
0x010205C4,\
0x01890640,\
0x01080548,\
0x019D0534,\
0x011704F8,\
0x018D0640,\
0x011E060C,\
0x0286065C,\
0x012305DC,\
0x036504C0,\
0x012906C8,\
0x022D04F8,\
0x013004C0,\
0x03AC06C8,\
0x01340410,\
0x032C0450,\
0x0138050C,\
0x025A067C,\
0x013D05F4,\
0x019106A0,\
0x01470570,\
0x01BD05F4,\
0x014D0584,\
0x01B905F4,\
0x01570598,\
0x01F90640,\
0x01650020,\
0x024A0570,\
0x01690010,\
0x021504B0,\
0x016D02F0,\
0x01CD067C,\
0x01710480,\
0x025E067C,\
0x01790410,\
0x04BA00F0,\
0x01850640,\
0x04DE060C,\
0x01A10548,\
0x0225055C,\
0x01B50420,\
0x03300450,\
0x01C10584,\
0x02460570,\
0x01C90460,\
0x03DC0430,\
0x01D1067C,\
0x053001D0,\
0x01D90534,\
0x03110640,\
0x01DD0534,\
0x04DA060C,\
0x01E505DC,\
0x03F004D0,\
0x01E905DC,\
0x03F404D0,\
0x01FD0640,\
0x027604E4,\
0x020D065C,\
0x05E0060C,\
0x0211065C,\
0x027201E0,\
0x023106C8,\
0x048603D0,\
0x023506C8,\
0x048A03D0,\
0x023906C8,\
0x048E0520,\
0x025203B0,\
0x040F00D0,\
0x02560420,\
0x03340460,\
0x029604A0,\
0x04000340,\
0x029A05AC,\
0x029E067C,\
0x02A2067C,\
0x038801B0,\
0x02AA06C8,\
0x04920520,\
0x02BA06C8,\
0x049603E0,\
0x02BE06C8,\
0x049A03E0,\
0x02C206C8,\
0x049E03F0,\
0x02C606C8,\
0x04A203F0,\
0x02D206C8,\
0x04A60520,\
0x02D606C8,\
0x04AA0520,\
0x02DA06C8,\
0x04AE0400,\
0x02DE06C8,\
0x04B20400,\
0x02F90200,\
0x042F0598,\
0x02FD0140,\
0x034906A0,\
0x030905C4,\
0x045F0330,\
0x030D0250,\
0x03550624,\
0x03150270,\
0x045B05F4,\
0x031C02B0,\
0x03610624,\
0x03280548,\
0x056005C4,\
0x0340050C,\
0x057802A0,\
0x034506A0,\
0x039C0210,\
0x035106A0,\
0x04530320,\
0x03590624,\
0x044F0310,\
0x03710280,\
0x0394055C,\
0x037C0190,\
0x03FC0584,\
0x038001A0,\
0x03C40548,\
0x03840490,\
0x044B06A0,\
0x038C05AC,\
0x039801F0,\
0x03A00240,\
0x03D004F8,\
0x03A406C8,\
0x05700090,\
0x03B8067C,\
0x052C0170,\
0x03BC067C,\
0x05070350,\
0x03C005AC,\
0x052801C0,\
0x03E00430,\
0x051C0470,\
0x03E40440,\
0x05240470,\
0x03EC0490,\
0x04FF06A0,\
0x041B0070,\
0x053400A0,\
0x04330120,\
0x0443065C,\
0x04370130,\
0x0447065C,\
0x04820570,\
0x04BE0260,\
0x04B60440,\
0x056C00B0,\
0x04D6060C,\
0x04E20584,\
0x04EE06A0,\
0x055003A0,\
0x057C05DC,\
0x05880290,\
0x05C80220,\
0x05DC06A0,\
0x05D00370,\
0x05D40598,\
0x000C03B0,\
0x003F03B0,\
0x006B03B0,\
0x008D03B0,\
0x00A003B0,\
0x00BB03B0,\
0x00CD03B0,\
0x00EE03B0,\
0x010E03B0,\
0x015303B0,\
0x017503B0,\
0x01A503B0,\
0x01AD03B0,\
0x01ED03B0,\
0x01F103B0,\
0x01F503B0,\
0x021903B0,\
0x024E03B0,\
0x027E03B0,\
0x028A03B0,\
0x028E03B0,\
0x029203B0,\
0x02AE03B0,\
0x02B203B0,\
0x02CA03B0,\
0x02CE03B0,\
0x02E203B0,\
0x02E603B0,\
0x02F503B0,\
0x030103B0,\
0x030503B0,\
0x032003B0,\
0x032403B0,\
0x036D03B0,\
0x039003B0,\
0x03B003B0,\
0x03B403B0,\
0x041303B0,\
0x041703B0,\
0x041F03B0,\
0x042303B0,\
0x043F03B0,\
0x045703B0,\
0x046703B0,\
0x047603B0,\
0x047A03B0,\
0x047E03B0,\
0x04C203B0,\
0x04C603B0,\
0x04CA03B0,\
0x04CE03B0,\
0x04E603B0,\
0x04F603B0,\
0x04FA03B0,\
0x050303B0,\
0x050F03B0,\
0x051303B0,\
0x051703B0,\
0x053803B0,\
0x053C03B0,\
0x054003B0,\
0x054403B0,\
0x054803B0,\
0x054C03B0,\
0x055403B0,\
0x055803B0,\
0x055C03B0,\
0x056403B0,\
0x056803B0,\
0x057403B0,\
0x058003B0,\
0x058403B0,\
0x058C03B0,\
0x059003B0,\
0x059403B0,\
0x059803B0,\
0x059C03B0,\
0x05A003B0,\
0x05A403B0,\
0x05A803B0,\
0x05AC03B0,\
0x05B003B0,\
0x05B403B0,\
0x05B803B0,\
0x05BC03B0,\
0x05C003B0,\
0x05C403B0,\
0x05CC03B0,\
0x05E403B0,\
0x05E803B0,\
0x05EC03B0,\
0x05F003B0,\
0x05F403B0,\
0x05F803B0,\
0x05FC03B0,\
0x060003B0,\
0x060403B0,\
0x060803B0,\
0x060C03B0,\
0x061003B0

NODE_2: .word 0x00010001, 0x80000010, 0x800003A0
.half 0x0010
NODE_3: .word 0x00010001, 0x80000020, 0x80000000
.half 0x00B4
NODE_4: .word 0x00010001, 0x80000030, 0x80000010
.half 0x00B0
NODE_5: .word 0x00010001, 0x80000040, 0x80000020
.half 0x000C
NODE_7: .word 0x00010001, 0x80000050, 0x80000030
.half 0x001C
NODE_8: .word 0x00010001, 0x80000060, 0x80000040
.half 0x0050
NODE_9: .word 0x00010001, 0x80000070, 0x80000050
.half 0x004C
NODE_10: .word 0x00010001, 0x80000080, 0x80000060
.half 0x019C
NODE_11: .word 0x00010001, 0x80000090, 0x80000070
.half 0x0008
NODE_12.6: .word 0x00010001, 0x800000A0, 0x80000080
.half 0x0180
NODE_13: .word 0x00010001, 0x800000B0, 0x80000090
.half 0x019C
NODE_15: .word 0x00010001, 0x800000C0, 0x800000A0
.half 0x01AC
NODE_16: .word 0x00010001, 0x800000D0, 0x800000B0
.half 0x0034
NODE_17: .word 0x00010001, 0x800000E0, 0x800000C0
.half 0x0104
NODE_18: .word 0x00010001, 0x800000F0, 0x800000D0
.half 0x0064
NODE_26.1: .word 0x00010001, 0x80000100, 0x800000E0
.half 0x00C0
NODE_38: .word 0x00010001, 0x80000110, 0x800000F0
.half 0x0068
NODE_39: .word 0x00010001, 0x80000120, 0x80000100
.half 0x0054
NODE_40: .word 0x00010001, 0x80000130, 0x80000110
.half 0x01A0
NODE_41: .word 0x00010001, 0x80000140, 0x80000120
.half 0x01A4
NODE_42: .word 0x00010001, 0x80000150, 0x80000130
.half 0x0140
NODE_43: .word 0x00010001, 0x80000160, 0x80000140
.half 0x0038
NODE_44.1: .word 0x00010001, 0x80000170, 0x80000150
.half 0x005C
NODE_44.2: .word 0x00010001, 0x80000180, 0x80000160
.half 0x0184
NODE_45: .word 0x00010001, 0x80000190, 0x80000170
.half 0x0060
NODE_46: .word 0x00010001, 0x800001A0, 0x80000180
.half 0x016C
NODE_47: .word 0x00010001, 0x800001B0, 0x80000190
.half 0x0170
NODE_49: .word 0x00010001, 0x800001C0, 0x800001A0
.half 0x0114
NODE_50: .word 0x00010001, 0x800001D0, 0x800001B0
.half 0x018C
NODE_51: .word 0x00010001, 0x800001E0, 0x800001C0
.half 0x00D8
NODE_52: .word 0x00010001, 0x800001F0, 0x800001D0
.half 0x00F4
NODE_53: .word 0x00010001, 0x80000200, 0x800001E0
.half 0x0178
NODE_54: .word 0x00010001, 0x80000210, 0x800001F0
.half 0x013C
NODE_55.1: .word 0x00010001, 0x80000220, 0x80000200
.half 0x015C
NODE_55.2: .word 0x00010001, 0x80000230, 0x80000210
.half 0x01BC
NODE_56: .word 0x00010001, 0x80000240, 0x80000220
.half 0x0024
NODE_57: .word 0x00010001, 0x80000250, 0x80000230
.half 0x017C
NODE_58: .word 0x00010001, 0x80000260, 0x80000240
.half 0x0148
NODE_59.1: .word 0x00010001, 0x80000270, 0x80000250
.half 0x01A8
NODE_59.3: .word 0x00010001, 0x80000280, 0x80000260
.half 0x014C
NODE_61.1: .word 0x00010001, 0x80000290, 0x80000270
.half 0x0168
NODE_61.2: .word 0x00010001, 0x800002A0, 0x80000280
.half 0x01B8
NODE_61.3: .word 0x00010001, 0x800002B0, 0x80000290
.half 0x0158
NODE_63: .word 0x00010001, 0x800002C0, 0x800002A0
.half 0x0150
NODE_64: .word 0x00010001, 0x800002D0, 0x800002B0
.half 0x0028
NODE_65: .word 0x00010001, 0x800002E0, 0x800002C0
.half 0x0014
NODE_66.1: .word 0x00010001, 0x800002F0, 0x800002D0
.half 0x0020
NODE_66.2: .word 0x00010001, 0x80000300, 0x800002E0
.half 0x00B8
NODE_67: .word 0x00010001, 0x80000310, 0x800002F0
.half 0x0030
NODE_72.1: .word 0x00010001, 0x80000320, 0x80000300
.half 0x0164
NODE_72.2: .word 0x00010001, 0x80000330, 0x80000310
.half 0x0160
NODE_73: .word 0x00010001, 0x80000340, 0x80000320
.half 0x0144
NODE_74: .word 0x00010001, 0x80000350, 0x80000330
.half 0x010C
NODE_75: .word 0x00010001, 0x80000360, 0x80000340
.half 0x0188
NODE_76.1: .word 0x00010001, 0x80000370, 0x80000350
.half 0x002C
NODE_76.2: .word 0x00010001, 0x80000380, 0x80000360
.half 0x01C0
NODE_77: .word 0x00010001, 0x80000390, 0x80000370
.half 0x0044
NODE_78: .word 0x00010001, 0x800003A0, 0x80000380
.half 0x003C
NODE_80: .word 0x00010001, 0x80000000, 0x80000390
.half 0x01B4
NODE_0: .word 0x00020002, 0x800003C0, 0x800004C0
.half 0x0000, 0x0104
NODE_1: .word 0x00020002, 0x800003D0, 0x800003B0
.half 0x0004, 0x0064
NODE_12.1: .word 0x00020002, 0x800003E0, 0x800003C0
.half 0x00F8, 0x00FC
NODE_12.3: .word 0x00020002, 0x800003F0, 0x800003D0
.half 0x011C, 0x0120
NODE_12.4: .word 0x00020002, 0x80000400, 0x800003E0
.half 0x0124, 0x0128
NODE_12.5: .word 0x00020002, 0x80000410, 0x800003F0
.half 0x0134, 0x0138
NODE_14.1: .word 0x00020002, 0x80000420, 0x80000400
.half 0x0098, 0x00C0
NODE_14.2: .word 0x00020002, 0x80000430, 0x80000410
.half 0x00CC, 0x0108
NODE_14.3: .word 0x00020002, 0x80000440, 0x80000420
.half 0x00D4, 0x0190
NODE_14.4: .word 0x00020002, 0x80000450, 0x80000430
.half 0x0194, 0x01AC
NODE_26.2: .word 0x00020002, 0x80000460, 0x80000440
.half 0x0098, 0x00CC
NODE_26.3: .word 0x00020002, 0x80000470, 0x80000450
.half 0x00D4, 0x0108
NODE_26.4: .word 0x00020002, 0x80000480, 0x80000460
.half 0x0190, 0x0194
NODE_35: .word 0x00020002, 0x80000490, 0x80000470
.half 0x0030, 0x00BC
NODE_48: .word 0x00020002, 0x800004A0, 0x80000480
.half 0x0174, 0x0198
NODE_69: .word 0x00020002, 0x800004B0, 0x80000490
.half 0x0040, 0x010C
NODE_86: .word 0x00020002, 0x800004C0, 0x800004A0
.half 0x0078, 0x00B4
NODE_94: .word 0x00020002, 0x800003B0, 0x800004B0
.half 0x008C, 0x0094
NODE_6: .word 0x00030003, 0x800004E4, 0x8000050C
.half 0x0048, 0x00E4, 0x00E8
NODE_27: .word 0x00030003, 0x800004F8, 0x800004D0
.half 0x0018, 0x0044, 0x00EC
NODE_90: .word 0x00030003, 0x8000050C, 0x800004E4
.half 0x0084, 0x0090, 0x017C
NODE_95: .word 0x00030003, 0x800004D0, 0x800004F8
.half 0x0040, 0x009C, 0x0158
NODE_12.2: .word 0x00040004, 0x80000534, 0x80000598
.half 0x0100, 0x0118, 0x012C, 0x0130
NODE_84: .word 0x00040004, 0x80000548, 0x80000520
.half 0x0074, 0x0080, 0x00DC, 0x00E0
NODE_88: .word 0x00040004, 0x8000055C, 0x80000534
.half 0x0080, 0x00C8, 0x0154, 0x0170
NODE_89: .word 0x00040004, 0x80000570, 0x80000548
.half 0x0010, 0x004C, 0x00C8, 0x0168
NODE_97: .word 0x00040004, 0x80000584, 0x8000055C
.half 0x00A4, 0x00B0, 0x00D0, 0x01A8
NODE_98: .word 0x00040004, 0x80000598, 0x80000570
.half 0x00A8, 0x00D0, 0x016C, 0x01B0
NODE_99: .word 0x00040004, 0x80000520, 0x80000584
.half 0x002C, 0x00AC, 0x013C, 0x01C0
NODE_30: .word 0x00050005, 0x800005C4, 0x800005F4
.half 0x0038, 0x0058, 0x0110, 0x0178, 0x018C
NODE_87: .word 0x00050005, 0x800005DC, 0x800005AC
.half 0x000C, 0x0024, 0x007C, 0x0144, 0x0154
NODE_92: .word 0x00050005, 0x800005F4, 0x800005C4
.half 0x0048, 0x008C, 0x00E4, 0x00E8, 0x01B8
NODE_96: .word 0x00050005, 0x800005AC, 0x800005DC
.half 0x0004, 0x00A0, 0x00A4, 0x00A8, 0x014C
NODE_91: .word 0x00060006, 0x8000060C, 0x8000060C
.half 0x0078, 0x0088, 0x00C4, 0x00E0, 0x00F0, 0x01B0
NODE_83: .word 0x00070007, 0x80000624, 0x80000624
.half 0x0014, 0x001C, 0x0028, 0x0070, 0x0148, 0x0150, 0x0164
NODE_81: .word 0x00080008, 0x80000640, 0x80000640
.half 0x006C, 0x0074, 0x007C, 0x0084, 0x00AC, 0x00C4, 0x00DC, 0x00EC
NODE_85: .word 0x00090009, 0x8000065C, 0x8000065C
.half 0x0000, 0x0054, 0x0060, 0x0068, 0x0088, 0x00F0, 0x00F4, 0x01A0, 0x01A4
NODE_32: .word 0x000B000B, 0x8000067C, 0x8000067C
.half 0x0018, 0x0034, 0x0058, 0x009C, 0x00B8, 0x00BC, 0x00D8, 0x0110, 0x0114, 0x0184, 0x0188
NODE_82: .word 0x000E000E, 0x800006A0, 0x800006A0
.half 0x0020, 0x003C, 0x0050, 0x005C, 0x006C, 0x0070, 0x00A0, 0x0140, 0x015C, 0x0160, 0x0174, 0x0198, 0x01B4, 0x01BC
NODE_93: .word 0x00100010, 0x800006C8, 0x800006C8
.half 0x0008, 0x0090, 0x0094, 0x00F8, 0x00FC, 0x0100, 0x0118, 0x011C, 0x0120, 0x0124, 0x0128, 0x012C, 0x0130, 0x0134, 0x0138, 0x0180

VAR_Edges: .word = 226
VAR_Buckets: .word 0x003B003B, 0x80000000,\
0x00120024, 0x800003B0,\
0x0004000C, 0x800004D0,\
0x0007001C, 0x80000520,\
0x00040014, 0x800005AC,\
0x00010006, 0x8000060C,\
0x00010007, 0x80000624,\
0x00010008, 0x80000640,\
0x00010009, 0x8000065C,\
0x00000000, 0x00000000,\
0x0001000B, 0x8000067C,\
0x00000000, 0x00000000,\
0x00000000, 0x00000000,\
0x0001000E, 0x800006A0,\
0x00000000, 0x00000000,\
0x00010010, 0x800006C8
